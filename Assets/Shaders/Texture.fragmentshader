#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 v_color;

in vec4 lightVector[8];


uniform vec3 lColor[8];


uniform int lightSize;



// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;

void main()
{
	vec4 textureColor = texture( myTextureSampler, UV );
	float d;
	float f_att;

	vec3 iTotal = vec3(0.1f);

	for(int i=0;i<lightSize;i++){
		d = length(vec3(lightVector[i]));
		if(lightVector[i].w > 0)
			f_att = 1.0/(d*d);
		else
			f_att = 1;

		iTotal += 0.8 * f_att * lColor[i];
	}



    // modulate texture color with vertex color
    color = v_color * textureColor * vec4(iTotal,1);
	//color = v_color * textureColor * vec4(1.5);

    // Alpha test - Discard Fragment below treshold
    if(color.a <= 0.02f)
        discard;
}